#define TOA_DIFFICULTY_QUANTITY STAT_NAME STORY_VALUE EASY_VALUE NORMAL_VALUE HARD_VALUE IMPOSSIBLE_VALUE
	##{TOA_DIFFICULTY_QUANTITY hitpoints 160 100 80 60 40}
	#ifdef STORY
		{STAT_NAME}={STORY_VALUE}
	#endif
	#ifdef EASY
		{STAT_NAME}={EASY_VALUE}
	#endif
	#ifdef BALANCED
		{STAT_NAME}={NORMAL_VALUE}
	#endif
	#ifdef DIFFICULT
		{STAT_NAME}={HARD_VALUE}
	#endif
	#ifdef IMPOSSIBLE
		{STAT_NAME}={IMPOSSIBLE_VALUE}
	#endif
#enddef

#define PLAYER_HEALTH_MAX
	[modify_unit]
		silent=yes
		[filter]
		   side=1
		[/filter]
		[effect]
			apply_to=hitpoints
			heal_full=yes
		[/effect]
	[/modify_unit]
#enddef

#define PLAYER_MOVEMENT_POINTS_0
	[modify_unit]
		[filter]
			side=1
		[/filter]
		moves=0
	[/modify_unit]
#enddef

#define PLAYER_MOVEMENT_RESET
	[modify_unit]
		[filter]
			side=1
		[/filter]
		goto_x=0
		goto_y=0
	[/modify_unit]
#enddef

#define PLAYER_MOVE_TO POS_X POS_Y
	[move_unit]
		side=1
		to_x={POS_X}
		to_y={POS_Y}
	[/move_unit]
#enddef

#define PLAYER_TELEPORT_TO POS_X POS_Y
	[reset_fog]
		[filter]
			side=1
		[/filter]
		reset_view=yes
	[/reset_fog]
	[move_unit]
		side=1
		to_x={POS_X}
		to_y={POS_Y}
	[/move_unit]
#enddef

#define PLAYER_MOVEMENT_POINTS_MAX
	[modify_unit]
		[filter]
			side=1
		[/filter]
		moves=$unit.max_moves
	[/modify_unit]
#enddef

#define PLAYER_FACE_HEX POS_X	
	[modify_unit]
		[filter]
			side=1
			[and]
				x=0-{POS_X}
			[/and]
		[/filter]
		facing=se
	[/modify_unit]
	[modify_unit]
		[filter]
			side=1
			[and]
				x={POS_X}-200
			[/and]
		[/filter]
		facing=sw
	[/modify_unit]
#enddef

#define PLAYER_FULL_RESTORE	
	{PLAYER_MOVEMENT_POINTS_MAX}
	{PLAYER_MOVEMENT_RESET}
	{PLAYER_HEALTH_MAX}
#enddef

#define TOA_TAUNTED_AI SIDES
    [event]
        name = start

        [micro_ai]
            side = {SIDES}
            ai_type = simple_attack
            action = add

            ca_score = 888888

            [filter]
                ability = taunted
            [/filter]
            [filter_second]
                id = mudoc
            [/filter_second]
        [/micro_ai]
        [micro_ai]
            side = {SIDES}
            ai_type = goto
            action = add

            ca_score = 999999

            [filter]
                ability = taunted
            [/filter]
            [filter_location]
                [filter]
                    id = mudoc
                [/filter]
            [/filter_location]
            ignore_enemy_at_goal = yes
            ignore_units = yes
        [/micro_ai]
    [/event]
#enddef

#define TOA_SNOW_WALK_PLAYER SIDES
	[event]
		name=unit placed
		first_time_only=no

			[modify_unit]
				duration=scenario

				[filter]
					side={SIDES}
					x,y=$x1,$y1
					[not] ### If a Unit is already fast on snow
						[filter_wml]
							[movement_costs]
								frozen=1
							[/movement_costs]
						[/filter_wml]
					[/not]
				[/filter]
				[effect]
					apply_to=movement_costs
					replace=yes
					[movement_costs]
						frozen=2
					[/movement_costs]
				[/effect]
			[/modify_unit]
	[/event]
#enddef

#define TOA_DISABLE_XP
	
	[event]
		name=unit placed
		first_time_only=no
		[lua] 
			code=<<
				local ecx = wesnoth.current.event_context
				local unit = wesnoth.units.get(ecx.x1, ecx.y1)
				local adv_string=""
				wml.variables["ToA.Scenario_Specific.Advancement_String"]=table.concat(unit.advances_to, ", ")
				for i,advancement in ipairs(wml.child_array(unit.__cfg,"advancement")) do
					if i > 1 then
						adv_string = adv_string .. ", "
					end
					adv_string=adv_string..advancement.id
				end
				wml.variables["ToA.Scenario_Specific.AMLA_String"]=adv_string
			>> 
		[/lua]
		[object]
			[filter]
				x,y=$x1,$y1
			[/filter]
			[effect]
				apply_to=remove_advancement
				amlas=$ToA.Scenario_Specific.AMLA_String
				types=$ToA.Scenario_Specific.Advancement_String
			[/effect]
		[/object]
	[/event]
#enddef

#define TOA_WALKING_CORPSE_SETUP
	[event]
		name=unit placed
		first_time_only=no
		[filter]
			type="Walking Corpse"
			side=1,8
		[/filter]
		[if]
			[have_unit]
				side=8,1
				type="Walking Corpse"
				count=2
			[/have_unit]
			[then]
				[kill]
					side=8,1
					type="Walking Corpse"
					animate=yes
					x,y=$x1,$y1
				[/kill]
			[/then]
			[else]
				[modify_unit]
					[filter]
						side=1
						type="Walking Corpse"
					[/filter]
					side=8
				[/modify_unit]
				[harm_unit]
					[filter]
						id="gar"
					[/filter]
					amount=12
					kill=no
				[/harm_unit]
			[/else]
		[/if]
	[/event]
#enddef

#define TOA_WALKING_CORPSE_TELEPORT 
	[event]
		name=side 1 turn
		first_time_only=no
		[filter_condition]
			[have_unit]
				side=8
				type="Walking Corpse"
			[/have_unit]
		[/filter_condition]
		[lua] 
			code=<<
				local Gar=wesnoth.units.get("gar")
				local Walking_Corpse=wesnoth.units.find_on_map{type="Walking Corpse", side=8}[1]
				local distance=wesnoth.map.distance_between({Walking_Corpse.x,Walking_Corpse.y},{Gar.x,Gar.y})
				if distance>2 then
					wesnoth.wml_actions.teleport({wml.tag.filter{type="Walking Corpse", side=8}, x=Gar.x, y=Gar.y, animate=true})
				end
			>> 
		[/lua]
	[/event]
#enddef

#define TOA_ADD_PROSPERITY AMOUNT
	[set_variable]
		name=ToA.Town.Prosperity
		add={AMOUNT}
	[/set_variable]
	[print]
		text="Town prosperity: +" {AMOUNT}
		size=50
		duration=2000
		fade_time=2000
		color=180,180,100 #r,g,b
	[/print]
#enddef

#define TOA_ADD_POPULATION AMOUNT	
	[set_variable]
		name=ToA.Town.Population
		add={AMOUNT}
	[/set_variable]
	[print]
		text="Town population: +" {AMOUNT}
		size=50
		duration=2000
		fade_time=2000
		color=100,100,180 #r,g,b
	[/print]
#enddef

#define TOA_DISABLE_VILLAGE_CAPTURE
	[event]
		name=capture
		first_time_only=no
		[filter]
		[/filter]
		[capture_village]
			[filter]
			[/filter]
			side=0
		[/capture_village]
	[/event]
#enddef
